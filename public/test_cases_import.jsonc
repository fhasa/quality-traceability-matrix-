[
    {
      // Basic authentication test case
      "id": "TC-001",
      "name": "Successful User Login",
      "description": "Verify user can login with correct credentials",
      "steps": [
        "Navigate to login page",
        "Enter valid username",
        "Enter valid password",
        "Click login button"
      ],
      "expectedResult": "User is successfully logged in and redirected to dashboard",
      
      // Test execution data
      "status": "Passed",  // Possible values: Passed, Failed, Not Run, Blocked
      "automationStatus": "Automated", // Possible values: Automated, Manual, Planned
      "automationPath": "tests/auth/login.spec.js", // Path to automation script (optional)
      "lastExecuted": "2025-03-15", // Date of last execution
      
      // Requirement mapping - links this test to requirements
      "requirementIds": ["REQ-001"], // Array of requirement IDs this test covers
      
      // Additional metadata (optional)
      "version": "v2.3", // Version this test applies to
      "executedBy": "Automation Pipeline", 
      "tags": ["Authentication", "Smoke Test"],
      "priority": "High",
      "estimatedDuration": 2 // Estimated duration in minutes
    },
    {
      // Invalid login test case
      "id": "TC-002",
      "name": "Login with Invalid Password",
      "description": "Verify error handling for invalid password",
      "steps": [
        "Navigate to login page",
        "Enter valid username",
        "Enter incorrect password",
        "Click login button"
      ],
      "expectedResult": "Display error message and prevent login access",
      
      "status": "Passed",
      "automationStatus": "Automated",
      "lastExecuted": "2025-03-15",
      "requirementIds": ["REQ-001"],
      
      "version": "v2.3",
      "tags": ["Authentication", "Error Handling"],
      "priority": "Medium"
    },
    {
      // Password reset test case
      "id": "TC-003",
      "name": "Password Reset Workflow",
      "description": "Complete password reset process from start to finish",
      "steps": [
        "Navigate to login page",
        "Click 'Forgot Password' link",
        "Enter registered email",
        "Check email for reset link",
        "Click reset link",
        "Enter new password",
        "Confirm new password",
        "Login with new credentials"
      ],
      "expectedResult": "User can successfully reset password and log in",
      
      "status": "Not Run",
      "automationStatus": "Planned",
      "requirementIds": ["REQ-002"],
      
      "version": "v2.3",
      "tags": ["Authentication", "Password Management"],
      "priority": "High"
    },
    {
      // Account lockout test case
      "id": "TC-004",
      "name": "Account Lockout After Multiple Failed Attempts",
      "description": "Verify account locks after specified number of failed login attempts",
      "steps": [
        "Attempt login with incorrect password multiple times",
        "Verify account is temporarily locked",
        "Attempt to login during lockout period"
      ],
      "expectedResult": "Account is locked after specified number of failed attempts",
      
      "status": "Not Run",
      "automationStatus": "Planned",
      "requirementIds": ["REQ-003"],
      
      "version": "v2.3",
      "tags": ["Security", "Authentication"],
      "priority": "High"
    },
    {
      // Password complexity test case
      "id": "TC-005",
      "name": "Password Complexity Validation",
      "description": "Validate password meets defined complexity requirements",
      "steps": [
        "Attempt to set password missing complexity requirements",
        "Verify error messages for insufficient complexity",
        "Set password meeting all complexity rules"
      ],
      "expectedResult": "Only passwords meeting all complexity requirements are accepted",
      
      "status": "Not Run",
      "automationStatus": "Planned",
      "requirementIds": ["REQ-004"],
      
      "version": "v2.3",
      "tags": ["Security", "Validation"],
      "priority": "Medium"
    }
]